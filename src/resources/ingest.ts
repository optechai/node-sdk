// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

import { APIResource } from '../resource';
import * as Core from '../core';
import * as IngestAPI from './ingest';

export class Ingest extends APIResource {
  /**
   * Validate your webhook is configured correctly
   */
  validate(
    body: IngestValidateParams,
    options?: Core.RequestOptions,
  ): Core.APIPromise<IngestValidateResponse> {
    return this._client.post('/ingest/validate', { body, ...options });
  }

  /**
   * The url to post a return webhook request to. This url will be generated by
   * Lorikeet and sent as a payload to your webhook
   */
  webhooks(
    toolId: string,
    ticketId: string,
    body: IngestWebhooksParams,
    options?: Core.RequestOptions,
  ): Core.APIPromise<void> {
    return this._client.post(`/ingest/${toolId}/${ticketId}`, {
      body,
      ...options,
      headers: { Accept: '*/*', ...options?.headers },
    });
  }
}

export interface IngestValidateResponse {
  code?: 200;

  /**
   * The return data for the tool request.
   */
  data?: string;
}

export interface IngestValidateParams {
  /**
   * The return data for the tool request.
   */
  data: unknown;
}

export interface IngestWebhooksParams {
  /**
   * The return data for the tool request.
   */
  data: unknown;
}

export namespace Ingest {
  export import IngestValidateResponse = IngestAPI.IngestValidateResponse;
  export import IngestValidateParams = IngestAPI.IngestValidateParams;
  export import IngestWebhooksParams = IngestAPI.IngestWebhooksParams;
}
